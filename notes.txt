JDK
[ java libraries and java virtual machine]

They are two "public and protected". and then objects like static and return value like void and then main(String args[])

                            public static void main(String[] args) 
                        {  
                             Point p1 = new Point();


classapth = path where jdk stores.

class is an like table ,object is like attributies 

Everything in Java is associated with classes and objects, along with its attributes and methods. 
For example: in real life, a car is an object. The car has attributes, such as weight and color, and methods, such as drive and brake. 
A Class is like an object constructor, or a "blueprint" for creating objects.

validations :

we need to specify the datatype for sure before using it.
number 0 to 9 ,#,! these are not allowed starting variables like a#,1q are invalid.
use CAMEL CASE and uppercases for declaring a variable like 	 int MAX_AGE = 200; and noOfPlayer  = 10;  for easy understanding

variables;
int for numbers,float,char for characters ,long for example 14f in float , f represents floating point.

If we want ot access non primritable types we uses new point().

when we create a class first letter should be captical.

Autoboixng;
keeping an variable(int) in object(Integer) 
  and 
auto-unboxing is vice-versa

A WRAPPER CLASS is a class whose object wraps or contains primitive data types. When we create an object to a wrapper class,
it contains a field and in this field, we can store primitive data types. 
In other words, we can wrap a primitive value into a wrapper class object.

Type of conversion in java 
1.Widening or implict function;

byte - short - int,char - long - float - double
INPUT :

BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
(System.in) is input of two bytes (character contains two bytes) and InputStreamReader reads the character and BufferedReader reads the complete line. [readLine()]

Scanner sr = newline Scanner(System.in);
int x = sr.nextint();
float y = sr.nextfloat;


import java.io.*; //BufferReader
import java.util.*; //scanner
import to java folder into folder io for all(*) classes.

OUTPUT :
System.out.println() prints in line by line order.
System.out.print() prints normal.
System.out.format() for floating point numbers ,date and time .

placeholders begin with percent sign like %d for integers ,%f is for float ,%s for string.
int x = 100;
System.out.format("Value of x %d\n", x);   ['\n'(line feed) arrange in line order]
System.out.format("Value of x %5.2d\n", x); [5 total indicates five charcters eg:    3.14 & .2 indicates after decimal characters.]

Arthematic operaters :
x %= y

&& , || , ! (or) binaray operaters

length() and equals() operators.

Loops :

if(condition)
{  ;} else {  ;}

from exit from a code after contion we use return(end the running of code); like
if(n<0){
println invalid
return;
}

Nested if else loop.

char move = sc.next().charAt(0);
int n = sc.nextInt();

Switch statment

 switch(abc)
	    {
	        case 'L' : x++; break;
	        case 'U' : x-- ; break;
	        default : System.out.println("Invalid");
            }
for loop :
for(Intiliazation;Condtion check; Loop variable change);

while(Condition)
{
}
dont keep semicolum after while(condition) it runs infinite loops like where(condtion){ ;} or where(condtion);

do - while excuetes for one time atleast whether it is true or false , while conditon executes if the conditon is true.
do
{
}while(conditon) 

Break and Condition (Generally these are used with if condition only).

Continue means skip the conditon line doest print whatever  and starts with nxt iteration .
Break as we are rached to the break condtion the loop doesnt run after it.

Function in java :
Public static void main(String [] args)  in this main is an method of java console and like this,
Public static void fun()  in this fun is an method , we call the method in main method so we can the o/p in where btwn we placed the method.
STACK Is an method to help methods to arrange the functions in order.

when code runs main into sub method then it stops over there and adn goes into sub method fn which executes and cm back to sub method and executes and main o/p ends.

Passing parametrs or returning parameters :

Primitive have references and non primitive  didnt have refernces which are independent.  

Applications of Functions :
1. Avoid COde Redundancy and Ease Maintianence
2. Avoid variable names Collisions 

Procedual Programming : we have functions that are called in other functions each other.

The function which has same name as the class called as Constructors .these have any return types .they have the same name as the class type.
to intialize the object that we used as a class called as construct and to use the data types of that class in this we need constructor.
The constrcuter that we used in the other class in object ,the values in the new object are aslo copied from constructer to the used new class.

class Point
{
    int x, y;
    Point(int a, int b)
    {
        x = a;
        y = b;
    }
    void print()
    {
        System.out.println("x = " + x + ", y = "+y);
    }
}
public class Gfg
{ 
    public static void main(String[] args)throws IOException 
    { 
      Point p = new Point(10, 20);
      p.print();
    } 
} 

Object Oreiented programming :













 

       
















